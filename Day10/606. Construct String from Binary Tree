/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
//   String result="";
   public void solve(TreeNode root, StringBuilder result){
       if(root==null) return ;
     result.append(Integer.toString(root.val));
     if(root.left!=null){
         result.append("(");
         solve(root.left, result);
         result.append(")");
     }
     if(root.right!=null){
         if(root.left==null) result.append("()");;
         result.append("(");
         solve(root.right, result);
         result.append(")");
         

     }
     
   }

    public String tree2str(TreeNode root) {
        
        
        StringBuilder result= new StringBuilder();
        solve(root, result);


        return result.toString();
         

    }
}
