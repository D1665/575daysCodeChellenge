class Solution {
    public int maxOperations(int[] nums, int k) {
        int count = 0;
        // every number greater than K can be marked as zero and ignored.
        int zerosCount = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] >= k) {
                nums[i] = 0;
            }
        }
        // sort the array ascending. 
        Arrays.sort(nums);
        
        // all zeros are on the left and can be skipped.
        int left = zerosCount;
        int right = nums.length - 1;
        while(left < right) {
            if (nums[left] + nums[right] == k) {
                // pair matched, take out both elements from further consideration.
                count++;
                left++;
                right--;
            } else if (nums[left] + nums[right] > k) {
                // sum is bigger than k so the right boundry doesn't have pair in our array. 
                right--;
            } else if (nums[left] + nums[right] < k) {
                // the least elemnt doesn't have a pair. Skipping it.
                left++;
            }
        }

        return count;
    }
}
